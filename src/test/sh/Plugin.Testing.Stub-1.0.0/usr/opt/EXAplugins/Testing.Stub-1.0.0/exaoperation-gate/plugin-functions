#!/bin/bash

# This script is a replacement for the plugin-functions script that comes with
# a regular Exasol installation. It uses Bash instead of Python to reduce the
# number of external dependencies.
#
# Output is identical to the original script in order to not break potential
# automation that might parse this output.

readonly script_path="$(dirname $(readlink -f $0))"

declare -A functions

functions[INSTALL]='Install plugin.'
functions[UNINSTALL]='Install plugin.'
functions[STATUS]='Show status of plugin (not installed, activated, not activated).'
functions[START]='Start plugin service'
functions[STOP]='Stop plugin service'
functions[RESTART]='Restart the service'
functions[ON_BOOT]='Undocumented'

usage() {
    echo "Usage: $0 <function name> <parameter>"
    echo "       $0 --show-functions"
    echo "       $0 -h | --help"
}

exit_abnormal() {
    echo 'Wrong call to plugin wrapper.'
    exit 1
}

list_functions() {
    for key in "${!functions[@]}"; do
        echo "$key:${functions[$key]}"
    done
}

if [[ "$#" -eq 1 ]]; then
    if [[ "$1" == '--show-functions' ]]; then
        list_functions
    elif [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
        usage
    else
        exit_abnormal
    fi
elif [[ "$#" -eq 2 ]]; then
    readonly given_function=${1^^}
    if [[ -n "${functions[$given_function]}" ]]; then
        "$script_path/${1,,}" "$2"
    else
        echo "Unknown function '$1'"
        exit 1
    fi
else
    exit_abnormal
fi