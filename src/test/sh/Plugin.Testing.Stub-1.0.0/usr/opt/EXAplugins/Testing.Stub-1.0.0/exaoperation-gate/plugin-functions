#!/usr/bin/env python3
import sys, os, base64
backup_home = "/opt/testing-stub"
cfg_file = "%s/sync.cfg" % backup_home
key_file = "%s/key" % backup_home


# definitions - interfaces
plugin_functions = {
    'INSTALL': 'Install plugin.',
    'UNINSTALL': 'Install plugin.',
    'STATUS': 'Show status of plugin (not installed, activated, not activated).',
    'START': 'Start plugin service',
    'STOP': 'Stop plugin service',
    'RESTART': 'Restart the service',
    'ON_BOOT': 'Undocumented'
}

# implement show-functions
if len(sys.argv) == 2 and sys.argv[1] == '--show-functions':
    print("\n".join(["%s:%s" % (X, Y) for X, Y in plugin_functions.items()]))
    sys.exit(0)
elif len(sys.argv) != 3:
    print("Wrong call to plugin wrapper.")
    sys.exit(1)
elif sys.argv[1].upper() not in plugin_functions:
    print("Unknown function '%s'" % sys.argv[1])
    sys.exit(1)

# call actual function
binary = "%s/%s" % (os.path.dirname(os.path.abspath(__file__)), sys.argv[1].lower())
os.execl(binary, binary, *sys.argv[2:])